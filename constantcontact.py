import requests
import gmail
from credentials import cc_client_id, cc_token, email
from time import sleep

# Constant Contact API.
base_url = 'https://api.constantcontact.com/v2/activities/'
headers = {'Authorization': ('Bearer ' + cc_token)}
params = {'api_key': cc_client_id}
endpoints = ['addcontacts']


def create_payload(contacts, list_ids):
    '''Creates the JSON payload sent in the request to the Constant Contact API.

    Arguments:
        contacts = The list of contacts generated by append_contacts().
        list_id = A list containing the ids of Constant Contact lists the
        contacts will be uploaded to.

    Returns:
        payload: a JSON formatted dictionary with a list of contacts, the id of
        the Constant Contact list the contacts will be added to, and the column
        names of the contacts's data.
    '''
    payload = {'import_data': contacts,
               'lists': list_ids,
               'column_names': ['Email Address', 'First Name',
                                'Last Name', 'Home Phone',
                                'Address Line 1', 'Address Line 2',
                                'City', 'State',
                                'Zip/Postal Code', 'Custom Field 1']}
    return payload


def add_contacts(payload):
    '''POSTs a JSON payload to the Constant Contact API.

    Arguments:
        payload = The dictionary returned by create_payload().

    Returns:
        activity = A dictionary containing a detailed status report of the
        activity.
    '''
    r = requests.post(base_url + endpoints[0], headers=headers, params=params,
                      json=payload)
    activity = r.json()['id']
    return activity


def get_status(activity):
    '''Returns a detailed status report for an activity in Constant Contact.

    Arguments:
        activity = The id of the activity returned by calling add_contacts().

    Returns:
        status_report = A dictionary containing a detailed status report for
        the activity.
    '''
    r = requests.get(base_url + activity, headers=headers, params=params)
    report = r.json()
    print(report)
    return report


def poll_activity(report):
    '''Sends an email confirming the number of members added and errors
    encountered, if any.

    Arguments:
        report = A dictionary containing a detailed status report for an
        activity, as returned by get_status().
    '''
    while report['status'] != 'COMPLETE':
        report = get_status(report['id'])
        sleep(5)
    else:
        if report['error_count'] == 0:
            gmail.create_message(email, email,
                                 'New Constant Contact Activity: {} contact(s) added with \
                                 no errors.'.format(report['contact_count']),
                                 ('Added {} contact(s) added.\n\n'
                                  '---\n'
                                  'Sent by reels. Something wrong? Contact Javier.'.format(report['contact_count'])))
        else:
            gmail.create_message(email, email,
                                 'New Constant Contact Activity: {} contact(s) added with \
                                 {} error(s).'.format(report['contact_count'],
                                                      report['error_count']),
                                 ('The error(s) were: {}.\n\n'
                                  '---\n'
                                  'Sent by reels. Something wrong? Contact Javier.'.format(report['errors'])))
